<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:sys="clr-namespace:System;assembly=mscorlib"
                    xmlns:converters="clr-namespace:WWSearchDataGrid.Modern.WPF.Converters"
                    xmlns:sdg="clr-namespace:WWSearchDataGrid.Modern.WPF">

    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="/WWSearchDataGrid.Modern.WPF;component/Themes/Common/CommonStyles.xaml" />
        <ResourceDictionary Source="/WWSearchDataGrid.Modern.WPF;component/Templates/FilterTokenTemplates.xaml" />
    </ResourceDictionary.MergedDictionaries>

    <!--  Converters  -->
    <converters:BooleanToVisibilityCollapsedConverter x:Key="BooleanToVisibilityConverter" />
    <converters:StringToVisibilityConverter x:Key="StringToVisibilityConverter" />
    <converters:GreaterThanConverter x:Key="GreaterThanConverter" />

    <Style x:Key="Default_FilterPanel_Style" TargetType="{x:Type sdg:FilterPanel}">
        <Style.Resources>
            <!--  Panel base brushes  -->
            <SolidColorBrush x:Key="FilterPanel.BackgroundBrush" Color="#FFF8F9FA" />
            <SolidColorBrush x:Key="FilterPanel.BorderBrush" Color="#FFE1E5E9" />

            <!--  Fade overlay gradient stops  -->
            <Color x:Key="FilterPanel.FadeGradientStartColor">#00FFFFFF</Color>
            <SolidColorBrush x:Key="FilterPanel.FadeGradientEndBrush" Color="{StaticResource FilterPanel.BackgroundBrush}" />

            <!--  Toggle/expand button brushes  -->
            <SolidColorBrush x:Key="FilterPanel.ToggleHoverBackgroundBrush" Color="#FFEEEEEE" />
            <SolidColorBrush x:Key="FilterPanel.ToggleHoverForegroundBrush" Color="#FF1C1C1C" />
            <SolidColorBrush x:Key="FilterPanel.TogglePressedBackgroundBrush" Color="#FFDDDDDD" />
            <SolidColorBrush x:Key="FilterPanel.TogglePressedForegroundBrush" Color="#FF000000" />

            <!--  Edit button brushes  -->
            <SolidColorBrush x:Key="FilterPanel.EditHoverBackgroundBrush" Color="#FFEEEEEE" />
            <SolidColorBrush x:Key="FilterPanel.EditHoverForegroundBrush" Color="#FF1C1C1C" />
            <SolidColorBrush x:Key="FilterPanel.EditPressedBackgroundBrush" Color="#FFDDDDDD" />
            <SolidColorBrush x:Key="FilterPanel.EditPressedForegroundBrush" Color="#FF000000" />

            <!--  Clear-all button brushes  -->
            <SolidColorBrush x:Key="FilterPanel.ClearAllHoverBackgroundBrush" Color="#FFEEEEEE" />
            <SolidColorBrush x:Key="FilterPanel.ClearAllHoverForegroundBrush" Color="#FFCC0000" />
            <SolidColorBrush x:Key="FilterPanel.ClearAllPressedBackgroundBrush" Color="#FFDDDDDD" />
            <SolidColorBrush x:Key="FilterPanel.ClearAllPressedForegroundBrush" Color="#FF990000" />
        </Style.Resources>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type sdg:FilterPanel}">
                    <Border Background="{StaticResource FilterPanel.BackgroundBrush}"
                            BorderBrush="{StaticResource FilterPanel.BorderBrush}"
                            BorderThickness="0,1,0,0"
                            Visibility="{Binding HasActiveFilters, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource BooleanToVisibilityConverter}}">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="*" />
                                <ColumnDefinition Width="Auto" />
                            </Grid.ColumnDefinitions>

                            <!--  Filters Enabled Checkbox  -->
                            <CheckBox x:Name="PART_FiltersEnabledCheckBox"
                                      Grid.Column="0"
                                      IsChecked="{Binding FiltersEnabled, RelativeSource={RelativeSource TemplatedParent}}"
                                      ToolTip="Enable or disable all filters without clearing filter definitions">
                                <CheckBox.Style>
                                    <Style BasedOn="{StaticResource Default_CheckBox_Style}" TargetType="CheckBox">
                                        <Setter Property="VerticalAlignment" Value="Top" />
                                        <Setter Property="Margin" Value="6,6,0,0" />
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding IsExpanded, RelativeSource={RelativeSource TemplatedParent}}" Value="False">
                                                <Setter Property="VerticalAlignment" Value="Center" />
                                                <Setter Property="Margin" Value="6,0,0,0" />
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </CheckBox.Style>
                            </CheckBox>

                            <!--  Tokenized filters area  -->
                            <Grid Grid.Column="1" VerticalAlignment="Center">
                                <ItemsControl x:Name="PART_TokenizedFiltersControl"
                                              ItemsSource="{Binding FilterTokens, RelativeSource={RelativeSource TemplatedParent}}"
                                              ItemTemplateSelector="{StaticResource FilterTokenTemplateSelector}">
                                    <ItemsControl.Style>
                                        <Style TargetType="ItemsControl">
                                            <Setter Property="ItemsPanel">
                                                <Setter.Value>
                                                    <ItemsPanelTemplate>
                                                        <StackPanel Orientation="Horizontal" />
                                                    </ItemsPanelTemplate>
                                                </Setter.Value>
                                            </Setter>
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding IsExpanded, RelativeSource={RelativeSource TemplatedParent}}" Value="True">
                                                    <Setter Property="ItemsPanel">
                                                        <Setter.Value>
                                                            <ItemsPanelTemplate>
                                                                <WrapPanel Orientation="Horizontal" MaxHeight="200" />
                                                            </ItemsPanelTemplate>
                                                        </Setter.Value>
                                                    </Setter>
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </ItemsControl.Style>
                                </ItemsControl>
                            </Grid>

                            <!--  Fade overlay  -->
                            <Border x:Name="PART_FadeOverlay"
                                    Grid.Column="1"
                                    IsHitTestVisible="False"
                                    Margin="0,0,-1,0"
                                    HorizontalAlignment="Right"
                                    Width="60">
                                <Border.Background>
                                    <LinearGradientBrush StartPoint="0,0" EndPoint="1,0">
                                        <GradientStop Color="{StaticResource FilterPanel.FadeGradientStartColor}" Offset="0" />
                                        <GradientStop Color="{StaticResource FilterPanel.FadeGradientEndBrush}" Offset="1" />
                                    </LinearGradientBrush>
                                </Border.Background>
                                <Border.Style>
                                    <Style TargetType="Border">
                                        <Setter Property="Visibility" Value="Collapsed" />
                                        <Style.Triggers>
                                            <MultiDataTrigger>
                                                <MultiDataTrigger.Conditions>
                                                    <Condition Binding="{Binding HasOverflow, RelativeSource={RelativeSource TemplatedParent}}" Value="True" />
                                                    <Condition Binding="{Binding IsExpanded, RelativeSource={RelativeSource TemplatedParent}}" Value="False" />
                                                </MultiDataTrigger.Conditions>
                                                <Setter Property="Visibility" Value="Visible" />
                                            </MultiDataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </Border.Style>
                            </Border>

                            <!--  Action buttons  -->
                            <StackPanel Grid.Column="2" Orientation="Horizontal">
                                <StackPanel.Style>
                                    <Style TargetType="StackPanel">
                                        <Setter Property="VerticalAlignment" Value="Bottom" />
                                        <Setter Property="Margin" Value="0,0,4,7" />
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding IsExpanded, RelativeSource={RelativeSource TemplatedParent}}" Value="False">
                                                <Setter Property="VerticalAlignment" Value="Center" />
                                                <Setter Property="Margin" Value="0,0,4,0" />
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </StackPanel.Style>

                                <!--  Expand/Collapse toggle  -->
                                <Button x:Name="PART_ExpandButton"
                                        Command="{Binding ToggleExpandCommand, RelativeSource={RelativeSource TemplatedParent}}"
                                        Width="24"
                                        Height="24"
                                        FontWeight="ExtraBlack"
                                        FontSize="14">
                                    <Button.Style>
                                        <Style BasedOn="{StaticResource TransparentFontIcon_Button_Style}" TargetType="Button">
                                            <Setter Property="Content" Value="&#xE712;" />
                                            <Setter Property="Background" Value="Transparent" />
                                            <Setter Property="ToolTip" Value="Expand filter panel" />
                                            <Setter Property="Visibility" Value="Visible" />
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding HasOverflow, RelativeSource={RelativeSource TemplatedParent}}" Value="False">
                                                    <Setter Property="Visibility" Value="Collapsed" />
                                                </DataTrigger>
                                                <DataTrigger Binding="{Binding IsExpanded, RelativeSource={RelativeSource TemplatedParent}}" Value="True">
                                                    <Setter Property="Content" Value="&#xE896;" />
                                                    <Setter Property="ToolTip" Value="Collapse filter panel" />
                                                    <Setter Property="Visibility" Value="Visible" />
                                                </DataTrigger>
                                                <Trigger Property="IsMouseOver" Value="True">
                                                    <Setter Property="Background" Value="{StaticResource FilterPanel.ToggleHoverBackgroundBrush}" />
                                                    <Setter Property="Foreground" Value="{StaticResource FilterPanel.ToggleHoverForegroundBrush}" />
                                                </Trigger>
                                                <Trigger Property="IsPressed" Value="True">
                                                    <Setter Property="Background" Value="{StaticResource FilterPanel.TogglePressedBackgroundBrush}" />
                                                    <Setter Property="Foreground" Value="{StaticResource FilterPanel.TogglePressedForegroundBrush}" />
                                                </Trigger>
                                            </Style.Triggers>
                                        </Style>
                                    </Button.Style>
                                </Button>

                                <!--  Edit button  -->
                                <Button x:Name="PART_EditButton"
                                        Command="{Binding EditFiltersCommand, RelativeSource={RelativeSource TemplatedParent}}"
                                        Width="24"
                                        Height="24"
                                        Content="&#xE70F;"
                                        FontSize="14"
                                        ToolTip="Open advanced filter editor">
                                    <Button.Style>
                                        <Style BasedOn="{StaticResource TransparentFontIcon_Button_Style}" TargetType="Button">
                                            <Style.Triggers>
                                                <Trigger Property="IsMouseOver" Value="True">
                                                    <Setter Property="Background" Value="{StaticResource FilterPanel.EditHoverBackgroundBrush}" />
                                                    <Setter Property="Foreground" Value="{StaticResource FilterPanel.EditHoverForegroundBrush}" />
                                                </Trigger>
                                                <Trigger Property="IsPressed" Value="True">
                                                    <Setter Property="Background" Value="{StaticResource FilterPanel.EditPressedBackgroundBrush}" />
                                                    <Setter Property="Foreground" Value="{StaticResource FilterPanel.EditPressedForegroundBrush}" />
                                                </Trigger>
                                            </Style.Triggers>
                                        </Style>
                                    </Button.Style>
                                </Button>

                                <!--  Clear All button  -->
                                <Button x:Name="PART_ClearAllButton"
                                        Command="{Binding ClearAllFiltersCommand, RelativeSource={RelativeSource TemplatedParent}}"
                                        Width="24"
                                        Height="24"
                                        Content="&#xE711;"
                                        FontSize="14"
                                        ToolTip="Clear all filters">
                                    <Button.Style>
                                        <Style BasedOn="{StaticResource TransparentFontIcon_Button_Style}" TargetType="Button">
                                            <Style.Triggers>
                                                <Trigger Property="IsMouseOver" Value="True">
                                                    <Setter Property="Background" Value="{StaticResource FilterPanel.ClearAllHoverBackgroundBrush}" />
                                                    <Setter Property="Foreground" Value="{StaticResource FilterPanel.ClearAllHoverForegroundBrush}" />
                                                </Trigger>
                                                <Trigger Property="IsPressed" Value="True">
                                                    <Setter Property="Background" Value="{StaticResource FilterPanel.ClearAllPressedBackgroundBrush}" />
                                                    <Setter Property="Foreground" Value="{StaticResource FilterPanel.ClearAllPressedForegroundBrush}" />
                                                </Trigger>
                                            </Style.Triggers>
                                        </Style>
                                    </Button.Style>
                                </Button>
                            </StackPanel>
                        </Grid>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style BasedOn="{StaticResource Default_FilterPanel_Style}" TargetType="{x:Type sdg:FilterPanel}" />

</ResourceDictionary>