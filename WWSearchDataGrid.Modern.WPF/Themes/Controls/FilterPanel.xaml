<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:sys="clr-namespace:System;assembly=mscorlib"
                    xmlns:converters="clr-namespace:WWSearchDataGrid.Modern.WPF.Converters"
                    xmlns:sdg="clr-namespace:WWSearchDataGrid.Modern.WPF">

    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="/WWSearchDataGrid.Modern.WPF;component/Templates/FilterTokenTemplates.xaml" />
    </ResourceDictionary.MergedDictionaries>

    <!--  Converters  -->
    <converters:BooleanToVisibilityCollapsedConverter x:Key="BooleanToVisibilityCollapsedConverter" />
    <converters:StringToVisibilityConverter x:Key="StringToVisibilityConverter" />
    <converters:GreaterThanConverter x:Key="GreaterThanConverter" />

    <!--  Default FilterPanel Style  -->
    <Style x:Key="GenericFilterPanelStyle" TargetType="{x:Type sdg:FilterPanel}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type sdg:FilterPanel}">
                    <Border Background="#F8F9FA"
                            BorderBrush="#E1E5E9"
                            BorderThickness="0,1,0,0"
                            Visibility="{Binding HasActiveFilters, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource BooleanToVisibilityCollapsedConverter}}">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto" />
                                <!--  Filters enabled checkbox  -->
                                <ColumnDefinition Width="*" />
                                <!--  Filter tokens  -->
                                <ColumnDefinition Width="Auto" />
                                <!--  Action buttons  -->
                            </Grid.ColumnDefinitions>

                            <!--  Filters Enabled Checkbox  -->
                            <CheckBox x:Name="PART_FiltersEnabledCheckBox"
                                      Grid.Column="0"
                                      IsChecked="{Binding FiltersEnabled, RelativeSource={RelativeSource TemplatedParent}}"
                                      ToolTip="Enable or disable all filters without clearing filter definitions">
                                <CheckBox.Style>
                                    <Style TargetType="{x:Type CheckBox}">
                                        <Setter Property="VerticalAlignment" Value="Top" />
                                        <Setter Property="Margin" Value="6,6,6,0" />
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding IsExpanded, RelativeSource={RelativeSource TemplatedParent}}" Value="False">
                                                <Setter Property="VerticalAlignment" Value="Center" />
                                                <Setter Property="Margin" Value="6,0,6,0" />
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </CheckBox.Style>
                            </CheckBox>

                            <!--  Filter Tokens Area  -->
                            <Grid Grid.Column="1" VerticalAlignment="Center">

                                <!--  Tokenized Filter Display  -->
                                <ItemsControl x:Name="PART_TokenizedFiltersControl"
                                              ItemsSource="{Binding FilterTokens, RelativeSource={RelativeSource TemplatedParent}}"
                                              ItemTemplateSelector="{StaticResource GenericFilterTokenTemplateSelector}">
                                    <ItemsControl.Style>
                                        <Style TargetType="ItemsControl">
                                            <!--  Default collapsed state: use StackPanel for single line  -->
                                            <Setter Property="ItemsPanel">
                                                <Setter.Value>
                                                    <ItemsPanelTemplate>
                                                        <StackPanel Orientation="Horizontal" />
                                                    </ItemsPanelTemplate>
                                                </Setter.Value>
                                            </Setter>
                                            <Style.Triggers>
                                                <!--  Expanded state: use WrapPanel for multiple lines  -->
                                                <DataTrigger Binding="{Binding IsExpanded, RelativeSource={RelativeSource TemplatedParent}}" Value="True">
                                                    <Setter Property="ItemsPanel">
                                                        <Setter.Value>
                                                            <ItemsPanelTemplate>
                                                                <WrapPanel Orientation="Horizontal" MaxHeight="200" />
                                                            </ItemsPanelTemplate>
                                                        </Setter.Value>
                                                    </Setter>
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </ItemsControl.Style>
                                </ItemsControl>
                            </Grid>

                            <Border x:Name="PART_FadeOverlay"
                                    Grid.Column="1"
                                    IsHitTestVisible="False"
                                    Margin="0,0,-1,0"
                                    HorizontalAlignment="Right"
                                    Width="60">
                                <Border.Background>
                                    <LinearGradientBrush StartPoint="0,0" EndPoint="1,0">
                                        <GradientStop Color="#00FFFFFF" Offset="0" />
                                        <GradientStop Color="#FFF8F9FA" Offset="1" />
                                    </LinearGradientBrush>
                                </Border.Background>
                                <Border.Style>
                                    <Style TargetType="Border">
                                        <Setter Property="Visibility" Value="Collapsed" />
                                        <Style.Triggers>
                                            <MultiDataTrigger>
                                                <MultiDataTrigger.Conditions>
                                                    <Condition Binding="{Binding HasOverflow, RelativeSource={RelativeSource TemplatedParent}}" Value="True" />
                                                    <Condition Binding="{Binding IsExpanded, RelativeSource={RelativeSource TemplatedParent}}" Value="False" />
                                                </MultiDataTrigger.Conditions>
                                                <Setter Property="Visibility" Value="Visible" />
                                            </MultiDataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </Border.Style>
                            </Border>
                            <!--  Action Buttons  -->
                            <StackPanel Grid.Column="2" Orientation="Horizontal">
                                <StackPanel.Style>
                                    <Style TargetType="{x:Type StackPanel}">
                                        <Setter Property="VerticalAlignment" Value="Bottom" />
                                        <Setter Property="Margin" Value="0,0,4,3" />
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding IsExpanded, RelativeSource={RelativeSource TemplatedParent}}" Value="False">
                                                <Setter Property="VerticalAlignment" Value="Center" />
                                                <Setter Property="Margin" Value="0,0,4,0" />
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </StackPanel.Style>

                                <!--  Expand/Collapse Toggle Button  -->
                                <Button x:Name="PART_ExpandButton"
                                        BorderThickness="0"
                                        Cursor="Hand"
                                        Command="{Binding ToggleExpandCommand, RelativeSource={RelativeSource TemplatedParent}}"
                                        Width="24"
                                        Height="24"
                                        FontFamily="Segoe MDL2 Assets"
                                        FontWeight="ExtraBlack"
                                        FontSize="14">
                                    <Button.Style>
                                        <Style TargetType="{x:Type Button}">
                                            <Setter Property="Content" Value="&#xE712;" />
                                            <Setter Property="Foreground" Value="Gray" />
                                            <Setter Property="Background" Value="Transparent" />
                                            <Setter Property="ToolTip" Value="Expand filter panel" />
                                            <Setter Property="Visibility" Value="Visible" />
                                            <Setter Property="Template">
                                                <Setter.Value>
                                                    <ControlTemplate TargetType="{x:Type Button}">
                                                        <Border x:Name="border"
                                                                Background="{TemplateBinding Background}"
                                                                BorderBrush="{TemplateBinding BorderBrush}"
                                                                BorderThickness="{TemplateBinding BorderThickness}">
                                                            <ContentPresenter x:Name="contentPresenter"
                                                                              Focusable="False"
                                                                              Margin="{TemplateBinding Padding}"
                                                                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                                                              RecognizesAccessKey="True"
                                                                              TextElement.Foreground="{TemplateBinding Foreground}"
                                                                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                                                        </Border>
                                                    </ControlTemplate>
                                                </Setter.Value>
                                            </Setter>
                                            <Style.Triggers>
                                                <!--  Hide expand button when there's no overflow  -->
                                                <DataTrigger Binding="{Binding HasOverflow, RelativeSource={RelativeSource TemplatedParent}}" Value="False">
                                                    <Setter Property="Visibility" Value="Collapsed" />
                                                </DataTrigger>
                                                <DataTrigger Binding="{Binding IsExpanded, RelativeSource={RelativeSource TemplatedParent}}" Value="True">
                                                    <Setter Property="Content" Value="&#xE896;" />
                                                    <Setter Property="ToolTip" Value="Collapse filter panel" />
                                                    <Setter Property="Visibility" Value="Visible" />
                                                </DataTrigger>
                                                <Trigger Property="IsMouseOver" Value="True">
                                                    <Setter Property="Background" Value="#FFF0F0F0" />
                                                    <Setter Property="Foreground" Value="#1c1c1c" />
                                                </Trigger>
                                                <Trigger Property="IsPressed" Value="True">
                                                    <Setter Property="Background" Value="#FFF0F0F0" />
                                                    <Setter Property="Foreground" Value="#000000" />
                                                </Trigger>
                                            </Style.Triggers>
                                        </Style>
                                    </Button.Style>
                                </Button>

                                <Button x:Name="PART_ClearAllButton"
                                        BorderThickness="0"
                                        Cursor="Hand"
                                        Command="{Binding ClearAllFiltersCommand, RelativeSource={RelativeSource TemplatedParent}}"
                                        Width="24"
                                        Height="24"
                                        FontFamily="Segoe MDL2 Assets"
                                        Content="&#xE711;"
                                        FontSize="14"
                                        ToolTip="Clear all filters">
                                    <Button.Style>
                                        <Style TargetType="{x:Type Button}">
                                            <Setter Property="Foreground" Value="Gray" />
                                            <Setter Property="Background" Value="Transparent" />
                                            <Setter Property="Template">
                                                <Setter.Value>
                                                    <ControlTemplate TargetType="{x:Type Button}">
                                                        <Border x:Name="border"
                                                                Background="{TemplateBinding Background}"
                                                                BorderBrush="{TemplateBinding BorderBrush}"
                                                                BorderThickness="{TemplateBinding BorderThickness}">
                                                            <ContentPresenter x:Name="contentPresenter"
                                                                              Focusable="False"
                                                                              Margin="{TemplateBinding Padding}"
                                                                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                                                              RecognizesAccessKey="True"
                                                                              TextElement.Foreground="{TemplateBinding Foreground}"
                                                                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                                                        </Border>
                                                    </ControlTemplate>
                                                </Setter.Value>
                                            </Setter>
                                            <Style.Triggers>
                                                <Trigger Property="IsMouseOver" Value="True">
                                                    <Setter Property="Background" Value="#eee" />
                                                    <Setter Property="Foreground" Value="#CC0000" />
                                                </Trigger>
                                                <Trigger Property="IsPressed" Value="True">
                                                    <Setter Property="Background" Value="#ddd" />
                                                    <Setter Property="Foreground" Value="#990000" />
                                                </Trigger>
                                            </Style.Triggers>
                                        </Style>
                                    </Button.Style>
                                </Button>
                            </StackPanel>
                        </Grid>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

</ResourceDictionary>