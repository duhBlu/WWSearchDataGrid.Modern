<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:sdgCore="clr-namespace:WWSearchDataGrid.Modern.Core;assembly=WWSearchDataGrid.Modern.Core"
                    xmlns:sys="clr-namespace:System;assembly=mscorlib"
                    xmlns:sdg="clr-namespace:WWSearchDataGrid.Modern.WPF"
                    xmlns:converters="clr-namespace:WWSearchDataGrid.Modern.WPF.Converters">

    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="/WWSearchDataGrid.Modern.WPF;component/Themes/Controls/Primitives/SearchTextBox.xaml" />
    </ResourceDictionary.MergedDictionaries>

    <!--  Converters  -->
    <converters:SearchTypeToBetweenVisibilityConverter x:Key="BetweenValueVisibilityConverter" />
    <converters:SearchTypeToIconConverter x:Key="SearchTypeToIconConverter" />
    <converters:DateIntervalToIconConverter x:Key="DateIntervalToIconConverter" />
    <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter" />
    <converters:FilterInputTemplateToVisibilityConverter x:Key="FilterInputTemplateToVisibilityConverter" />
    <converters:EnumToStringConverter x:Key="EnumToStringConverter" />

    <!--  Single ComboBox Template  -->
    <DataTemplate x:Key="SingleComboBoxTemplate">
        <ComboBox Text="{Binding SelectedValue}" ItemsSource="{Binding SearchTemplateController.ColumnValues}">
            <ComboBox.Style>
                <Style TargetType="{x:Type ComboBox}">
                    <Setter Property="IsEditable" Value="True" />
                    <Setter Property="VirtualizingPanel.IsVirtualizing" Value="True" />
                    <Setter Property="VirtualizingPanel.VirtualizationMode" Value="Recycling" />
                    <Setter Property="ScrollViewer.IsDeferredScrollingEnabled" Value="True" />
                    <Setter Property="ItemsPanel">
                        <Setter.Value>
                            <ItemsPanelTemplate>
                                <VirtualizingStackPanel VirtualizingPanel.IsVirtualizing="True"
                                                        VirtualizingPanel.VirtualizationMode="Recycling"
                                                        VirtualizingPanel.ScrollUnit="Item" />
                            </ItemsPanelTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
            </ComboBox.Style>
        </ComboBox>
    </DataTemplate>

    <!--  Single TextBox Template  -->
    <DataTemplate x:Key="SingleTextBoxTemplate">
        <sdg:SearchTextBox Text="{Binding SelectedValue, UpdateSourceTrigger=PropertyChanged}"
                           Style="{StaticResource GenericSearchTextboxStyle}"
                           Watermark="Enter text..."
                           ShowSearchIcon="False" />
    </DataTemplate>

    <!--  Dual ComboBox Template  -->
    <DataTemplate x:Key="DualComboBoxTemplate">
        <StackPanel Orientation="Horizontal">
            <TextBlock Text="From:"
                       Margin="0,0,5,0"
                       VerticalAlignment="Center" />
            <ComboBox Text="{Binding SelectedValue, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}"
                      MinWidth="120"
                      Tag="Type or select..."
                      ItemsSource="{Binding SearchTemplateController.ColumnValues}">
                <ComboBox.Style>
                    <Style TargetType="{x:Type ComboBox}">
                        <Setter Property="IsEditable" Value="True" />
                        <Setter Property="VirtualizingPanel.IsVirtualizing" Value="True" />
                        <Setter Property="VirtualizingPanel.VirtualizationMode" Value="Recycling" />
                        <Setter Property="ScrollViewer.IsDeferredScrollingEnabled" Value="True" />
                        <Setter Property="ItemsPanel">
                            <Setter.Value>
                                <ItemsPanelTemplate>
                                    <VirtualizingStackPanel VirtualizingPanel.IsVirtualizing="True"
                                                            VirtualizingPanel.VirtualizationMode="Recycling"
                                                            VirtualizingPanel.ScrollUnit="Item" />
                                </ItemsPanelTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>
                </ComboBox.Style>
            </ComboBox>
            <TextBlock Text="To:"
                       Margin="10,0,5,0"
                       VerticalAlignment="Center" />
            <ComboBox Text="{Binding SelectedSecondaryValue, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}"
                      MinWidth="120"
                      ItemsSource="{Binding SearchTemplateController.ColumnValues}">
                <ComboBox.Style>
                    <Style TargetType="{x:Type ComboBox}">
                        <Setter Property="IsEditable" Value="True" />
                        <Setter Property="VirtualizingPanel.IsVirtualizing" Value="True" />
                        <Setter Property="VirtualizingPanel.VirtualizationMode" Value="Recycling" />
                        <Setter Property="ScrollViewer.IsDeferredScrollingEnabled" Value="True" />
                        <Setter Property="ItemsPanel">
                            <Setter.Value>
                                <ItemsPanelTemplate>
                                    <VirtualizingStackPanel VirtualizingPanel.IsVirtualizing="True"
                                                            VirtualizingPanel.VirtualizationMode="Recycling"
                                                            VirtualizingPanel.ScrollUnit="Item" />
                                </ItemsPanelTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>
                </ComboBox.Style>
            </ComboBox>
        </StackPanel>
    </DataTemplate>

    <!--  Dual DateTime Picker Template  -->
    <DataTemplate x:Key="DualDateTimePickerTemplate">
        <StackPanel Orientation="Horizontal">
            <TextBlock Text="From:"
                       Margin="0,0,5,0"
                       VerticalAlignment="Center" />
            <DatePicker VerticalContentAlignment="Center"
                        MinWidth="120"
                        SelectedDate="{Binding SelectedValue}" />
            <TextBlock Text="To:"
                       Margin="10,0,5,0"
                       VerticalAlignment="Center" />
            <DatePicker VerticalContentAlignment="Center"
                        MinWidth="120"
                        SelectedDate="{Binding SelectedSecondaryValue}" />
        </StackPanel>
    </DataTemplate>

    <!--  Numeric UpDown Template  -->
    <DataTemplate x:Key="NumericUpDownTemplate">
        <StackPanel Orientation="Horizontal">
            <sdg:NumericUpDown Width="80"
                               Minimum="1"
                               Maximum="10000"
                               Increment="1"
                               Value="{Binding SelectedValue, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
            <TextBlock Foreground="Gray"
                       Text="items"
                       Margin="5,0,0,0"
                       VerticalAlignment="Center" />
        </StackPanel>
    </DataTemplate>

    <!--  No Input Template  -->
    <DataTemplate x:Key="NoInputTemplate">
        <TextBlock FontStyle="Italic"
                   Foreground="Gray"
                   Text="(No value required)"
                   VerticalAlignment="Center" />
    </DataTemplate>

    <!--  ComboBox List Template  -->
    <DataTemplate x:Key="ComboBoxListTemplate">
        <Grid>
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto" />
                <RowDefinition Height="*" />
            </Grid.RowDefinitions>

            <Button Grid.Row="0"
                    Command="{Binding AddValueCommand}"
                    Margin="0,0,0,5"
                    HorizontalAlignment="Left"
                    Content="Add Value" />

            <ListBox Grid.Row="1"
                     Background="Transparent"
                     BorderThickness="0"
                     MaxHeight="150"
                     ItemsSource="{Binding SelectedValues}"
                     ScrollViewer.CanContentScroll="True"
                     VirtualizingPanel.IsVirtualizing="True"
                     VirtualizingPanel.VirtualizationMode="Recycling">
                <ListBox.ItemsPanel>
                    <ItemsPanelTemplate>
                        <VirtualizingStackPanel Orientation="Vertical" />
                    </ItemsPanelTemplate>
                </ListBox.ItemsPanel>
                <ListBox.ItemContainerStyle>
                    <Style TargetType="ListBoxItem">
                        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
                        <Setter Property="Background" Value="Transparent" />
                        <Setter Property="BorderThickness" Value="0" />
                        <Setter Property="Padding" Value="0" />
                        <Style.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" Value="Transparent" />
                            </Trigger>
                            <Trigger Property="IsSelected" Value="True">
                                <Setter Property="Background" Value="Transparent" />
                            </Trigger>
                        </Style.Triggers>
                    </Style>
                </ListBox.ItemContainerStyle>
                <ListBox.ItemTemplate>
                    <DataTemplate>
                        <Border BorderBrush="#DDD"
                                BorderThickness="1"
                                Margin="0,2"
                                Padding="3">
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*" />
                                    <ColumnDefinition Width="Auto" />
                                </Grid.ColumnDefinitions>
                                <ComboBox Grid.Column="0" ItemsSource="{Binding DataContext.SearchTemplateController.ColumnValues, RelativeSource={RelativeSource AncestorType=ListBox}}">
                                    <ComboBox.Style>
                                        <Style TargetType="{x:Type ComboBox}">
                                            <Setter Property="IsEditable" Value="True" />
                                            <Setter Property="VirtualizingPanel.IsVirtualizing" Value="True" />
                                            <Setter Property="VirtualizingPanel.VirtualizationMode" Value="Recycling" />
                                            <Setter Property="ScrollViewer.IsDeferredScrollingEnabled" Value="True" />
                                            <Setter Property="ItemsPanel">
                                                <Setter.Value>
                                                    <ItemsPanelTemplate>
                                                        <VirtualizingStackPanel VirtualizingPanel.IsVirtualizing="True"
                                                                                VirtualizingPanel.VirtualizationMode="Recycling"
                                                                                VirtualizingPanel.ScrollUnit="Item" />
                                                    </ItemsPanelTemplate>
                                                </Setter.Value>
                                            </Setter>
                                        </Style>
                                    </ComboBox.Style>
                                </ComboBox>
                                <Button Grid.Column="1"
                                        BorderThickness="0"
                                        Cursor="Hand"
                                        Command="{Binding DataContext.RemoveValueCommand, RelativeSource={RelativeSource AncestorType=ListBox}}"
                                        CommandParameter="{Binding}"
                                        Margin="3,0,0,0"
                                        Width="24"
                                        Height="24"
                                        FontFamily="Segoe MDL2 Assets"
                                        Content="&#xE711;">
                                    <Button.Style>
                                        <Style TargetType="{x:Type Button}">
                                            <Setter Property="Background" Value="Transparent" />
                                            <Setter Property="Cursor" Value="Hand" />
                                            <Setter Property="Foreground" Value="Gray" />
                                            <Setter Property="Template">
                                                <Setter.Value>
                                                    <ControlTemplate TargetType="{x:Type Button}">
                                                        <Border x:Name="border"
                                                                Background="{TemplateBinding Background}"
                                                                BorderBrush="{TemplateBinding BorderBrush}"
                                                                BorderThickness="{TemplateBinding BorderThickness}">
                                                            <ContentPresenter x:Name="contentPresenter"
                                                                              Focusable="False"
                                                                              Margin="{TemplateBinding Padding}"
                                                                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                                                              RecognizesAccessKey="True"
                                                                              TextElement.Foreground="{TemplateBinding Foreground}"
                                                                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                                                        </Border>
                                                    </ControlTemplate>
                                                </Setter.Value>
                                            </Setter>
                                            <Style.Triggers>
                                                <Trigger Property="IsMouseOver" Value="True">
                                                    <Setter Property="Background" Value="#FFF0F0F0" />
                                                    <Setter Property="Foreground" Value="#1c1c1c" />
                                                </Trigger>
                                                <Trigger Property="IsPressed" Value="True">
                                                    <Setter Property="Background" Value="#FFE0E0E0" />
                                                    <Setter Property="Foreground" Value="#000000" />
                                                </Trigger>
                                                <Trigger Property="IsEnabled" Value="False">
                                                    <Setter Property="Opacity" Value="0.5" />
                                                    <Setter Property="Cursor" Value="Arrow" />
                                                </Trigger>
                                            </Style.Triggers>
                                        </Style>
                                    </Button.Style>
                                </Button>
                            </Grid>
                        </Border>
                    </DataTemplate>
                </ListBox.ItemTemplate>
            </ListBox>
        </Grid>
    </DataTemplate>

    <!--  DateTime Picker List Template  -->
    <DataTemplate x:Key="DateTimePickerListTemplate">
        <Grid>
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto" />
                <RowDefinition Height="*" />
            </Grid.RowDefinitions>

            <Button Grid.Row="0"
                    Command="{Binding AddDateCommand}"
                    Margin="0,0,0,5"
                    HorizontalAlignment="Left"
                    Content="Add Date" />

            <ListBox Grid.Row="1"
                     Background="Transparent"
                     BorderThickness="0"
                     MaxHeight="150"
                     ItemsSource="{Binding SelectedDates}"
                     ScrollViewer.CanContentScroll="True"
                     VirtualizingPanel.IsVirtualizing="True"
                     VirtualizingPanel.VirtualizationMode="Recycling">
                <ListBox.ItemsPanel>
                    <ItemsPanelTemplate>
                        <VirtualizingStackPanel Orientation="Vertical" />
                    </ItemsPanelTemplate>
                </ListBox.ItemsPanel>
                <ListBox.ItemContainerStyle>
                    <Style TargetType="ListBoxItem">
                        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
                        <Setter Property="Background" Value="Transparent" />
                        <Setter Property="BorderThickness" Value="0" />
                        <Setter Property="Padding" Value="0" />
                    </Style>
                </ListBox.ItemContainerStyle>
                <ListBox.ItemTemplate>
                    <DataTemplate>
                        <Border BorderBrush="#DDD"
                                BorderThickness="1"
                                Margin="0,2"
                                Padding="3">
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*" />
                                    <ColumnDefinition Width="Auto" />
                                </Grid.ColumnDefinitions>
                                <DatePicker Grid.Column="0" SelectedDate="{Binding DateValue}" />
                                <Button Grid.Column="1"
                                        BorderThickness="0"
                                        Cursor="Hand"
                                        Command="{Binding DataContext.RemoveDateCommand, RelativeSource={RelativeSource AncestorType=ListBox}}"
                                        CommandParameter="{Binding}"
                                        Margin="3,0,0,0"
                                        Width="20"
                                        FontFamily="Segoe MDL2 Assets"
                                        Content="&#xE711;">
                                    <Button.Style>
                                        <Style TargetType="{x:Type Button}">
                                            <Setter Property="Background" Value="Transparent" />
                                            <Setter Property="Template">
                                                <Setter.Value>
                                                    <ControlTemplate TargetType="{x:Type Button}">
                                                        <Border x:Name="border"
                                                                Background="{TemplateBinding Background}"
                                                                BorderBrush="{TemplateBinding BorderBrush}"
                                                                BorderThickness="{TemplateBinding BorderThickness}">
                                                            <ContentPresenter x:Name="contentPresenter"
                                                                              Focusable="False"
                                                                              Margin="{TemplateBinding Padding}"
                                                                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                                                              RecognizesAccessKey="True"
                                                                              TextElement.Foreground="{TemplateBinding Foreground}"
                                                                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                                                        </Border>
                                                    </ControlTemplate>
                                                </Setter.Value>
                                            </Setter>
                                            <Style.Triggers>
                                                <Trigger Property="IsMouseOver" Value="True">
                                                    <Setter Property="Background" Value="#FFF0F0F0" />
                                                    <Setter Property="Foreground" Value="#1c1c1c" />
                                                </Trigger>
                                                <Trigger Property="IsPressed" Value="True">
                                                    <Setter Property="Background" Value="#FFE0E0E0" />
                                                    <Setter Property="Foreground" Value="#000000" />
                                                </Trigger>
                                                <Trigger Property="IsEnabled" Value="False">
                                                    <Setter Property="Opacity" Value="0.5" />
                                                    <Setter Property="Cursor" Value="Arrow" />
                                                </Trigger>
                                            </Style.Triggers>
                                        </Style>
                                    </Button.Style>
                                </Button>
                            </Grid>
                        </Border>
                    </DataTemplate>
                </ListBox.ItemTemplate>
            </ListBox>
        </Grid>
    </DataTemplate>

    <!--  Date Interval CheckList Template  -->
    <DataTemplate x:Key="DateIntervalCheckListTemplate">
        <ScrollViewer MaxHeight="200">
            <ItemsControl ItemsSource="{Binding DateIntervals}">
                <ItemsControl.ItemTemplate>
                    <DataTemplate>
                        <CheckBox IsChecked="{Binding IsSelected}" Margin="0,2">
                            <CheckBox.Content>
                                <StackPanel Orientation="Horizontal">
                                    <!--<Image Source="{Binding Interval, Converter={StaticResource DateIntervalToIconConverter}}"
                                           Visibility="Collapsed"
                                           Margin="0,0,6,0"
                                           VerticalAlignment="Center"
                                           Width="16"
                                           Height="16" />-->
                                    <TextBlock Text="{Binding DisplayName}" VerticalAlignment="Center" />
                                </StackPanel>
                            </CheckBox.Content>
                        </CheckBox>
                    </DataTemplate>
                </ItemsControl.ItemTemplate>
            </ItemsControl>
        </ScrollViewer>
    </DataTemplate>

</ResourceDictionary>