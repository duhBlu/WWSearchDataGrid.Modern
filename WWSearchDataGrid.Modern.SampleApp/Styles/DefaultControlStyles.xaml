<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">

    <!--#region Checkbox-->

    <Style x:Key="CustomCheckBoxStyle" TargetType="{x:Type CheckBox}">
        <Style.Resources>
            <!--  CheckBox Brushes  -->
            <SolidColorBrush x:Key="Checkbox.BackgroundBrush.Default" Color="#FFFFFF" />
            <SolidColorBrush x:Key="Checkbox.BorderBrush.Default" Color="#999999" />

            <SolidColorBrush x:Key="Checkbox.ForegroundBrush.Checked" Color="#FFFFFF" />
            <SolidColorBrush x:Key="Checkbox.ForegroundBrush.Unchecked" Color="#000000" />

            <SolidColorBrush x:Key="Checkbox.FillBrush.Checked" Color="#0078D4" />
            <SolidColorBrush x:Key="Checkbox.FillBrush.Checked.Hover" Color="#005A9E" />
            <SolidColorBrush x:Key="Checkbox.FillBrush.Checked.Pressed" Color="#003D7A" />
            <SolidColorBrush x:Key="Checkbox.FillBrush.Unchecked.Hover" Color="#EEEEEE" />
            <SolidColorBrush x:Key="Checkbox.BorderBrush.Unchecked.Hover" Color="#CCCCCC" />
            <SolidColorBrush x:Key="Checkbox.FillBrush.Unchecked.Pressed" Color="#CDE6FF" />
        </Style.Resources>
        <Setter Property="FontSize" Value="13" />
        <Setter Property="Foreground" Value="{StaticResource Checkbox.ForegroundBrush.Unchecked}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type CheckBox}">
                    <BulletDecorator>
                        <BulletDecorator.Bullet>
                            <Border x:Name="Border"
                                    Background="{StaticResource Checkbox.BackgroundBrush.Default}"
                                    BorderBrush="{StaticResource Checkbox.BorderBrush.Default}"
                                    BorderThickness="1"
                                    Width="18"
                                    Height="18"
                                    CornerRadius="3">
                                <Grid>
                                    <TextBlock x:Name="CheckIcon"
                                               Foreground="Transparent"
                                               Text="&#xE73E;"
                                               HorizontalAlignment="Center"
                                               VerticalAlignment="Center"
                                               FontFamily="Segoe Fluent Icons"
                                               FontSize="12" />
                                    <Rectangle x:Name="IndeterminateIcon"
                                               Fill="Transparent"
                                               Visibility="Collapsed"
                                               HorizontalAlignment="Center"
                                               VerticalAlignment="Center"
                                               RadiusX="1"
                                               RadiusY="1"
                                               Width="10"
                                               Height="1" />
                                </Grid>
                            </Border>
                        </BulletDecorator.Bullet>
                        <ContentPresenter Margin="6,0,0,0"
                                          VerticalAlignment="Center"
                                          RecognizesAccessKey="True" />
                    </BulletDecorator>

                    <ControlTemplate.Triggers>
                        <!--  Checked  -->
                        <Trigger Property="IsChecked" Value="True">
                            <Setter TargetName="Border" Property="Background" Value="{StaticResource Checkbox.FillBrush.Checked}" />
                            <Setter TargetName="Border" Property="BorderBrush" Value="{StaticResource Checkbox.FillBrush.Checked}" />
                            <Setter TargetName="CheckIcon" Property="Foreground" Value="{StaticResource Checkbox.ForegroundBrush.Checked}" />
                            <Setter TargetName="IndeterminateIcon" Property="Visibility" Value="Collapsed" />
                        </Trigger>

                        <!--  Indeterminate  -->
                        <Trigger Property="IsChecked" Value="{x:Null}">
                            <Setter TargetName="Border" Property="Background" Value="{StaticResource Checkbox.FillBrush.Checked}" />
                            <Setter TargetName="Border" Property="BorderBrush" Value="{StaticResource Checkbox.FillBrush.Checked}" />
                            <Setter TargetName="CheckIcon" Property="Visibility" Value="Collapsed" />
                            <Setter TargetName="IndeterminateIcon" Property="Fill" Value="{StaticResource Checkbox.ForegroundBrush.Checked}" />
                            <Setter TargetName="IndeterminateIcon" Property="Visibility" Value="Visible" />
                        </Trigger>

                        <!--  Hover: Checked  -->
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" Value="True" />
                                <Condition Property="IsChecked" Value="True" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="Border" Property="Background" Value="{StaticResource Checkbox.FillBrush.Checked.Hover}" />
                            <Setter TargetName="Border" Property="BorderBrush" Value="{StaticResource Checkbox.FillBrush.Checked.Hover}" />
                        </MultiTrigger>

                        <!--  Hover: Indeterminate  -->
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" Value="True" />
                                <Condition Property="IsChecked" Value="{x:Null}" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="Border" Property="Background" Value="{StaticResource Checkbox.FillBrush.Checked.Hover}" />
                            <Setter TargetName="Border" Property="BorderBrush" Value="{StaticResource Checkbox.FillBrush.Checked.Hover}" />
                        </MultiTrigger>

                        <!--  Hover: Not Checked  -->
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" Value="True" />
                                <Condition Property="IsChecked" Value="False" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="Border" Property="Background" Value="{StaticResource Checkbox.FillBrush.Unchecked.Hover}" />
                            <Setter TargetName="Border" Property="BorderBrush" Value="{StaticResource Checkbox.BorderBrush.Unchecked.Hover}" />
                        </MultiTrigger>

                        <!--  Pressed: Not Checked  -->
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsPressed" Value="True" />
                                <Condition Property="IsChecked" Value="False" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="Border" Property="Background" Value="{StaticResource Checkbox.FillBrush.Unchecked.Pressed}" />
                            <Setter TargetName="Border" Property="BorderBrush" Value="{StaticResource Checkbox.FillBrush.Checked.Hover}" />
                        </MultiTrigger>

                        <!--  Pressed: Indeterminate  -->
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsPressed" Value="True" />
                                <Condition Property="IsChecked" Value="{x:Null}" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="Border" Property="Background" Value="{StaticResource Checkbox.FillBrush.Checked.Hover}" />
                            <Setter TargetName="Border" Property="BorderBrush" Value="{StaticResource Checkbox.FillBrush.Checked.Pressed}" />
                        </MultiTrigger>

                        <!--  Disabled  -->
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" Value="0.5" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--#endregion Checkbox-->

    <!--#region Buttons-->

    <Style x:Key="CustomTransparentFontIconButtonStyle" TargetType="{x:Type Button}">
        <Setter Property="Foreground" Value="Gray" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="BorderBrush" Value="Transparent" />
        <Setter Property="FontFamily" Value="Segoe Fluent Icons" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="Cursor" Value="Hand" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="border"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            CornerRadius="3">
                        <ContentPresenter x:Name="contentPresenter"
                                          Focusable="False"
                                          Margin="{TemplateBinding Padding}"
                                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                          RecognizesAccessKey="True"
                                          TextElement.Foreground="{TemplateBinding Foreground}"
                                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="#FFF0F0F0" />
                <Setter Property="Foreground" Value="#1c1c1c" />
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Background" Value="#FFE0E0E0" />
                <Setter Property="Foreground" Value="#000000" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Opacity" Value="0.5" />
                <Setter Property="Cursor" Value="Arrow" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="CustomBasicButtonStyle" TargetType="{x:Type Button}">
        <Setter Property="Padding" Value="10,5" />
        <Setter Property="Background" Value="#F0F0F0" />
        <Setter Property="BorderBrush" Value="#CCCCCC" />
        <Setter Property="Foreground" Value="#333333" />
        <Setter Property="Cursor" Value="Hand" />
        <Setter Property="FontSize" Value="12" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="1"
                            CornerRadius="3">
                        <ContentPresenter Margin="{TemplateBinding Padding}"
                                          HorizontalAlignment="Center"
                                          VerticalAlignment="Center" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="#E0E0E0" />
                            <Setter Property="BorderBrush" Value="#AAAAAA" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Background" Value="#D0D0D0" />
                            <Setter Property="BorderBrush" Value="#999999" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" Value="0.6" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--#endregion Buttons-->

    <!--#region Combobox-->

    <SolidColorBrush x:Key="ComboBox.BackgroundBrush" Color="White" />
    <SolidColorBrush x:Key="ComboBox.BackgroundBrush.Hover" Color="#f9f9f9" />
    <SolidColorBrush x:Key="ComboBox.ForegroundBrush" Color="Black" />
    <SolidColorBrush x:Key="ComboBox.BorderBrush.Normal" Color="#CCCCCC" />
    <SolidColorBrush x:Key="ComboBox.BorderBrush.Hover" Color="#888888" />
    <SolidColorBrush x:Key="ComboBox.BorderBrush.Focused" Color="#0078D4" />
    <SolidColorBrush x:Key="ComboBox.PlaceholderBrush" Color="#888888" />

    <SolidColorBrush x:Key="ComboBoxPopup.BackgroundBrush" Color="White" />
    <SolidColorBrush x:Key="ComboBoxPopup.BorderBrush" Color="#CCCCCC" />

    <SolidColorBrush x:Key="ComboBoxToggleButton.GlyphBrush.Normal" Color="Black" />
    <SolidColorBrush x:Key="ComboBoxToggleButton.GlyphBrush.Disabled" Color="#888888" />
    <SolidColorBrush x:Key="ComboBoxToggleButton.BackgroundBrush.Hover" Color="#E0E0E0" />
    <SolidColorBrush x:Key="ComboBoxToggleButton.BackgroundBrush.Pressed" Color="#D0D0D0" />

    <SolidColorBrush x:Key="ComboBoxItem.Background.MouseOver" Color="#F3F9FF" />
    <SolidColorBrush x:Key="ComboBoxItem.Background.Selected" Color="#E5F1FB" />
    <SolidColorBrush x:Key="ComboBoxItem.BorderBrush.MouseOver" Color="#0078D4" />
    <SolidColorBrush x:Key="ComboBoxItem.BorderBrush.Selected" Color="#005A9E" />
    <SolidColorBrush x:Key="ComboBoxItem.Foreground.Disabled" Color="#888888" />

    <Style x:Key="CustomComboBoxToggleButtonStyle" TargetType="{x:Type ToggleButton}">
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="IsTabStop" Value="False" />
        <Setter Property="Focusable" Value="False" />
        <Setter Property="FontFamily" Value="Segoe Fluent Icons" />
        <Setter Property="FontSize" Value="10" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Foreground" Value="{StaticResource ComboBoxToggleButton.GlyphBrush.Normal}" />
        <Setter Property="BorderBrush" Value="Transparent" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="Padding" Value="6" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Border Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            Margin="{TemplateBinding Margin}"
                            Padding="{TemplateBinding Padding}"
                            HorizontalAlignment="Stretch"
                            VerticalAlignment="Stretch"
                            CornerRadius="3">
                        <TextBlock x:Name="Glyph"
                                   Foreground="{TemplateBinding Foreground}"
                                   Text="&#xE70D;"
                                   HorizontalAlignment="Center"
                                   VerticalAlignment="Center"
                                   FontSize="{TemplateBinding FontSize}" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter TargetName="Glyph" Property="Text" Value="&#xE70E;" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{StaticResource ComboBoxToggleButton.BackgroundBrush.Hover}" />
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Background" Value="{StaticResource ComboBoxToggleButton.BackgroundBrush.Pressed}" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Foreground" Value="{StaticResource ComboBoxToggleButton.GlyphBrush.Disabled}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="CustomComboboxItemStyle" TargetType="{x:Type ComboBoxItem}">
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Padding" Value="12,6" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Foreground" Value="Black" />
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ComboBoxItem}">
                    <Border x:Name="Bd"
                            Background="{TemplateBinding Background}"
                            BorderBrush="Transparent"
                            BorderThickness="1"
                            Margin="2,1"
                            CornerRadius="4"
                            SnapsToDevicePixels="True">
                        <ContentPresenter Margin="{TemplateBinding Padding}"
                                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="Bd" Property="Background" Value="{StaticResource ComboBoxItem.Background.MouseOver}" />
                            <Setter TargetName="Bd" Property="BorderBrush" Value="{StaticResource ComboBoxItem.BorderBrush.MouseOver}" />
                        </Trigger>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter TargetName="Bd" Property="Background" Value="{StaticResource ComboBoxItem.Background.Selected}" />
                            <Setter TargetName="Bd" Property="BorderBrush" Value="{StaticResource ComboBoxItem.BorderBrush.Selected}" />
                            <Setter Property="Foreground" Value="{StaticResource ComboBox.ForegroundBrush}" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Foreground" Value="{StaticResource ComboBoxItem.Foreground.Disabled}" />
                            <Setter TargetName="Bd" Property="Opacity" Value="0.5" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="CustomComboBoxStyle" TargetType="{x:Type ComboBox}">
        <Setter Property="ItemContainerStyle" Value="{StaticResource CustomComboboxItemStyle}" />
        <Setter Property="Foreground" Value="{StaticResource ComboBox.ForegroundBrush}" />
        <Setter Property="Background" Value="{StaticResource ComboBox.BackgroundBrush}" />
        <Setter Property="BorderBrush" Value="{StaticResource ComboBox.BorderBrush.Normal}" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="IsEditable" Value="False" />
        <Setter Property="Padding" Value="8,4,3,4" />
        <Setter Property="MinHeight" Value="32" />
        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="VirtualizingPanel.IsVirtualizing" Value="True" />
        <Setter Property="VirtualizingPanel.VirtualizationMode" Value="Recycling" />
        <Setter Property="ScrollViewer.IsDeferredScrollingEnabled" Value="True" />
        <Setter Property="ItemsPanel">
            <Setter.Value>
                <ItemsPanelTemplate>
                    <VirtualizingStackPanel VirtualizingPanel.IsVirtualizing="True"
                                            VirtualizingPanel.VirtualizationMode="Recycling"
                                            VirtualizingPanel.ScrollUnit="Item" />
                </ItemsPanelTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ComboBox}">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="30" />
                        </Grid.ColumnDefinitions>

                        <Border x:Name="Border"
                                Grid.ColumnSpan="2"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                CornerRadius="4" />

                        <ToggleButton Grid.Column="0"
                                      BorderThickness="0"
                                      IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                                      IsHitTestVisible="True"
                                      Focusable="False"
                                      HorizontalContentAlignment="Left">
                            <ToggleButton.Style>
                                <Style TargetType="ToggleButton">
                                    <Setter Property="Focusable" Value="False" />
                                    <Setter Property="Background" Value="Transparent" />
                                    <Setter Property="Template">
                                        <Setter.Value>
                                            <ControlTemplate TargetType="ToggleButton">
                                                <Border Background="Transparent"
                                                        HorizontalAlignment="Stretch"
                                                        VerticalAlignment="Stretch">
                                                    <ContentPresenter x:Name="ContentPresenter"
                                                                      Margin="{TemplateBinding Padding}"
                                                                      HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                                      VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                                                </Border>
                                            </ControlTemplate>
                                        </Setter.Value>
                                    </Setter>
                                </Style>
                            </ToggleButton.Style>
                            <ContentPresenter x:Name="ContentPresenter"
                                              Margin="{TemplateBinding Padding}"
                                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                              Content="{TemplateBinding SelectionBoxItem}"
                                              ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}" />
                        </ToggleButton>


                        <ToggleButton x:Name="PART_DropDownToggle"
                                      Style="{StaticResource CustomComboBoxToggleButtonStyle}"
                                      Grid.Column="1"
                                      Background="Transparent"
                                      IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                                      Focusable="False" />

                        <Popup x:Name="PART_Popup"
                               AllowsTransparency="True"
                               IsOpen="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                               Placement="Bottom"
                               StaysOpen="False"
                               PopupAnimation="Slide"
                               PlacementTarget="{Binding RelativeSource={RelativeSource TemplatedParent}}">
                            <Border Background="{StaticResource ComboBoxPopup.BackgroundBrush}"
                                    BorderBrush="{StaticResource ComboBoxPopup.BorderBrush}"
                                    BorderThickness="1"
                                    MinWidth="{TemplateBinding ActualWidth}"
                                    MaxHeight="{TemplateBinding MaxDropDownHeight}"
                                    CornerRadius="4"
                                    SnapsToDevicePixels="True">
                                <ScrollViewer>
                                    <ItemsPresenter KeyboardNavigation.DirectionalNavigation="Contained" />
                                </ScrollViewer>
                            </Border>
                        </Popup>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="Border" Property="BorderBrush" Value="{StaticResource ComboBox.BorderBrush.Hover}" />
                            <Setter TargetName="Border" Property="Background" Value="{StaticResource ComboBox.BackgroundBrush.Hover}" />
                        </Trigger>
                        <Trigger Property="IsKeyboardFocused" Value="True">
                            <Setter TargetName="Border" Property="BorderBrush" Value="{StaticResource ComboBox.BorderBrush.Focused}" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" Value="0.6" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--#endregion Combobox-->

</ResourceDictionary>